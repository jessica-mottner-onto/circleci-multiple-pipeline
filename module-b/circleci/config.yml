# Config dedicated for module B
# All the resources must be prefixed with `module-a-` to avoid conflicts

version: 2.1

parameters:
  terraform-workflow:
    type: string
    default: ""

commands:
  install-terragrunt:
    steps:
      - run:
          name: install terragrunt
          command: |
            wget -O /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.36.1/terragrunt_linux_amd64
            chmod +x /usr/local/bin/terragrunt

jobs:
  plan:
    description:
      Generates TF plan for a TF configuration in the specified directory
      and saves that into a workspace.
    parameters:
      working_directory:
        description: Root directory of the Terraform configuration.
        type: string
    docker:
      - image: hashicorp/terraform:1.3.7
    steps:
      - install-terragrunt
      - checkout
      - run:
          name: terraform formatting
          command: terragrunt fmt
          working_directory: << parameters.working_directory >>
      - run:
          name: terraform initializing and validating
          command: |
            terragrunt init -input=false
            terragrunt validate
          working_directory: << parameters.working_directory >>
      - run:
          name: terraform plan
          command: terragrunt plan -out tfapply
          working_directory: << parameters.working_directory >>
      - persist_to_workspace:
          root: << parameters.working_directory >>
          paths:
            - .
  apply:
    description: Applies a TF plan saved in the workspace previously by the plan job.
    parameters:
      working_directory:
        description: Root directory of the Terraform configuration.
        type: string
    docker:
      - image: hashicorp/terraform:1.3.7
    steps:
      - install-terragrunt
      - checkout
      - attach_workspace:
          at: << parameters.working_directory >>
      - run:
          name: terraform apply
          command: terragrunt apply -auto-approve tfapply
          working_directory: << parameters.working_directory >>
  format-validate:
    description:
      Checks for correct formatting and validates the configuration in
      the specified directory.
    parameters:
      working_directory:
        description: Root directory of the Terraform configuration.
        type: string
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.0.3
    steps:
      - checkout
      - run:
          name: terraform formatting
          command: terraform fmt
          working_directory: << parameters.working_directory >>
      - run:
          name: terraform initializing and validating
          command: |
            terraform init -input=false
            terraform validate
          working_directory: << parameters.working_directory >>

workflows:
  module-b-terraform-workflow:
    when:
      not:
        equal: [<< pipeline.parameters.terraform-workflow >>, ""]
    jobs:
      - plan:
          context: aws-access
          working_directory: << pipeline.parameters.terraform-workflow >>
      - hold:
          type: approval
          requires:
            - plan
      - apply:
          context: aws-access
          working_directory: << pipeline.parameters.terraform-workflow >>
          requires:
            - hold
